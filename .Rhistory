summarise(Strep_Soft = first(Strep_Soft),
mean_MIC = mean(MIC_score),
mean_LEC = mean(LEC_score)
)
wilcox.test(assay2$mean_MIC ~ assay2$Strep_Soft)
wilcox.test(assay2$mean_LEC ~ assay2$Strep_Soft)
assay2 <- assay1 %>% group_by(Strain) %>%
summarise(Strep_Soft = first(Strep_Soft),
mean_MIC = mean(MIC_score),
mean_LEC = mean(LEC_score)
)
wilcox.test(assay2$mean_MIC ~ assay2$Strep_Soft)
wilcox.test(assay2$mean_LEC ~ assay2$Strep_Soft)
# Chunk 1
# rm(list=ls())
library(tidyverse)
library(readxl)
library(cowplot)
library(knitr)
library(ggbeeswarm)
library(RColorBrewer)
library(ggthemes)
sessionInfo()
# Chunk 2
datafile <- "Figure_3_MIC_LEC_analyses_DataSheet_20180531.xlsx"
datasheet <- "Sheet1"
# Chunk 3: Streptomyces dataset
assay1 <- read_excel(datafile, datasheet, na = "NA")
assay1 <- assay1 %>% dplyr::select(Strain, Strep_Soft, Antibiotic, MIC_score, LEC_score, Notes)
assay1 <- assay1 %>% dplyr::filter(is.na(Notes)) %>% dplyr::select(-Notes)
assay1$Strain <- as_factor(assay1$Strain)
assay1$Strep_Soft <- as_factor(assay1$Strep_Soft)
assay1$Antibiotic <- as_factor(assay1$Antibiotic)
tbl_df(assay1) # should have 155 rows and 5 cols
xtabs(~ Strain + Strep_Soft, assay1) # to see experimental design
# Chunk 4: stripchart of results
colorvec <- brewer.pal(3,"RdBu")
colorvec <- c(colorvec[3], colorvec[1], colorvec[2])
mic <- ggplot(assay1, aes(x = Strep_Soft, y = MIC_score))
lec <- ggplot(assay1, aes(x = Strep_Soft, y = LEC_score))
(micplot <- mic
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay1$Strep_Soft), notch = TRUE)
# + geom_jitter(width = 0.05, cex = .8)
+ geom_quasirandom()
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Minimum Inhibitory Concentration (MIC) score"))
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
(lecplot <- lec
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay1$Strep_Soft), notch = TRUE)
# + geom_jitter(width = 0.05, cex = .8)
+ geom_quasirandom()
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Lowest Inhibitory Concentration (LEC) score"))
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
plot_grid(micplot, lecplot, labels = c("A", "B"))
# Chunk 5: statistics
median(assay1$MIC_score[assay1$Strep_Soft == "Antibiotic-producers"])
median(assay1$MIC_score[assay1$Strep_Soft == "Non-producers"])
median(assay1$LEC_score[assay1$Strep_Soft == "Antibiotic-producers"])
median(assay1$LEC_score[assay1$Strep_Soft == "Non-producers"])
wilcox.test(assay1$MIC_score ~ assay1$Strep_Soft)
wilcox.test(assay1$LEC_score ~ assay1$Strep_Soft)
assay2 <- assay1 %>% group_by(Strain) %>%
summarise(Strep_Soft = first(Strep_Soft),
mean_MIC = mean(MIC_score),
mean_LEC = mean(LEC_score)
)
wilcox.test(assay2$mean_MIC ~ assay2$Strep_Soft)
wilcox.test(assay2$mean_LEC ~ assay2$Strep_Soft)
install.packages("rgdal")
setwd("~/Desktop/File/")
library("vegan")
library("mvabund")
library("car")
library("nlme")
library("mgcv")
colvec <- c("red","green","blue","cyan2")
colvec2 <- c("red","orange","brown","blue","purple","lightblue","green","darkgreen","cyan2","darkgray","black","hotpink")
options(digits=4) # sig digits limited to 4
#### read in OTU dataset #####
test300_otu.hhhl <- read.table("otu_hhhl.txt",header=TRUE, sep="\t",na.strings="NA", dec=".", strip.white=TRUE)
test300_otu.Hhml <- read.table("otu_Hhml.txt",header=TRUE, sep="\t",na.strings="NA", dec=".", strip.white=TRUE)
test300_otu.mmmm <- read.table("otu_mmmm.txt",header=TRUE, sep="\t",na.strings="NA", dec=".", strip.white=TRUE)
# rm(list=ls())
library(tidyverse)
library(readxl)
library(cowplot)
library(knitr)
library(ggbeeswarm)
library(RColorBrewer)
library(ggthemes)
library(envDocument)
library(broom)
env_doc("table", git = FALSE)
# Chunk 1
# rm(list=ls())
library(tidyverse)
library(readxl)
library(cowplot)
library(knitr)
library(ggbeeswarm)
library(RColorBrewer)
library(ggthemes)
library(envDocument)
library(broom)
env_doc("table", git = FALSE)
# Chunk 2
datafile <- "Figure_3_LEC_MIC_analyses_DataSheet_20180626.xlsx"
datasheet <- "Sheet1"
# Chunk 3: Streptomyces dataset
assay1 <- read_excel(datafile, datasheet, na = "NA")
assay1 <- assay1 %>% dplyr::select(Strain, Strep_Soft, Antibiotic, MIC_score, LEC_score, Notes)
assay1 <- assay1 %>% dplyr::filter(is.na(Notes) | Notes != "Contamination") %>% dplyr::select(-Notes)
assay1$Strain <- as_factor(assay1$Strain)
assay1$Strep_Soft <- as_factor(assay1$Strep_Soft)
assay1$Antibiotic <- as_factor(assay1$Antibiotic)
tbl_df(assay1) # should have 235 rows and 5 cols
xtabs(~ Strain + Strep_Soft, assay1) # to see experimental design
# Chunk 4: stripchart of results
colorvec <- brewer.pal(3,"RdBu")
colorvec <- c(colorvec[3], colorvec[1], colorvec[2])
mic <- ggplot(assay1, aes(x = Strep_Soft, y = MIC_score))
lec <- ggplot(assay1, aes(x = Strep_Soft, y = LEC_score))
(lecplot <- lec
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay1$Strep_Soft), notch = TRUE)
# + geom_jitter(width = 0.05, cex = .8)
+ geom_quasirandom()
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Lowest Inhibitory Concentration (LEC) score"))
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
(micplot <- mic
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay1$Strep_Soft), notch = TRUE)
# + geom_jitter(width = 0.05, cex = .8)
+ geom_quasirandom()
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Minimum Inhibitory Concentration (MIC) score"))
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
plot_grid(lecplot, micplot, labels = c("A", "B"))
# Chunk 5: statistics
levels(assay1$Strep_Soft)
median(assay1$LEC_score[assay1$Strep_Soft == "Antibiotic-producers"])
median(assay1$LEC_score[assay1$Strep_Soft == "Non-producers"])
median(assay1$LEC_score[assay1$Strep_Soft == "Resident Non-producers"])
median(assay1$MIC_score[assay1$Strep_Soft == "Antibiotic-producers"])
median(assay1$MIC_score[assay1$Strep_Soft == "Non-producers"])
median(assay1$MIC_score[assay1$Strep_Soft == "Resident Non-producers"])
# Chunk 6: compare producers to nonproducers
assay2 <- assay1 %>% dplyr::filter(Strep_Soft != "Resident Non-producers")
# summarise by Strain
assay2 <- assay2 %>% group_by(Strain) %>%
summarise(Strep_Soft = first(Strep_Soft),
mean_MIC = mean(MIC_score),
mean_LEC = mean(LEC_score)
)
assay2$Strep_Soft <- fct_drop(assay2$Strep_Soft) # drop unused factor level
levels(assay2$Strep_Soft) # confirm
mod1 <- wilcox.test(assay2$mean_MIC ~ assay2$Strep_Soft)
(mod1tidy <- tidy(mod1))
mod2 <- wilcox.test(assay2$mean_LEC ~ assay2$Strep_Soft)
(mod2tidy <- tidy(mod2))
pvalues <- c(mod1tidy$p.value, mod2tidy$p.value)
p.adjust(pvalues, "fdr")
# Chunk 1
# rm(list=ls())
library(tidyverse)
library(readxl)
library(cowplot)
library(knitr)
library(ggbeeswarm)
library(RColorBrewer)
library(ggthemes)
library(envDocument)
library(broom)
env_doc("table", git = FALSE)
# Chunk 2
datafile <- "Figure_3_LEC_MIC_analyses_DataSheet_20180626.xlsx"
datasheet <- "Sheet1"
# Chunk 3: Streptomyces dataset
assay1 <- read_excel(datafile, datasheet, na = "NA")
assay1 <- assay1 %>% dplyr::select(Strain, Strep_Soft, Antibiotic, MIC_score, LEC_score, Notes)
assay1 <- assay1 %>% dplyr::filter(is.na(Notes) | Notes != "Contamination") %>% dplyr::select(-Notes)
assay1$Strain <- as_factor(assay1$Strain)
assay1$Strep_Soft <- as_factor(assay1$Strep_Soft)
assay1$Antibiotic <- as_factor(assay1$Antibiotic)
tbl_df(assay1) # should have 235 rows and 5 cols
xtabs(~ Strain + Strep_Soft, assay1) # to see experimental design
colorvec <- brewer.pal(3,"RdBu")
colorvec <- c(colorvec[3], colorvec[1], colorvec[2])
mic <- ggplot(assay1, aes(x = Strep_Soft, y = MIC_score))
lec <- ggplot(assay1, aes(x = Strep_Soft, y = LEC_score))
# Chunk 1
# rm(list=ls())
library(tidyverse)
library(readxl)
library(knitr)
library(RColorBrewer)
library(ggthemes)
library(lattice)
library(lme4)
library(sjPlot)
sessionInfo()
# Chunk 2
datafile <- "Figure_1A_Growth_rate_analyses_DataSheet_20180302.xlsx"
sheet_strepto <- "data_table_Strep"
sheet_softbugs <- "data_table_Sb"
# Chunk 3: Streptomyces dataset
assay1 <- read_excel(datafile, sheet_strepto, na = "NA")
tbl_df(assay1) # should have 492 rows and 7 cols
assay1 <- assay1 %>% dplyr::select(-Input.order)
assay1 # should have 492 rows and 6 cols
# Chunk 4: Softbugs dataset
assay2 <- read_excel(datafile, sheet_softbugs, na = "NA")
tbl_df(assay2) # should have 483 rows and 10 cols
assay2 <- assay2 %>% dplyr::select(-Input.order)
assay2$Inv.strain <- assay2$Inv.strain + 10 # to differentiate numbering from Strepto samples
assay2 <- assay2 %>% mutate(Plate = ifelse(Plate == 4, 1, ifelse(Plate == 5, 2, ifelse(Plate == 6, 3, NA))))
assay2 # should have 483 rows and 6 cols
# Chunk 5: assay3
assay3 <- bind_rows(assay1, assay2)
assay3 <- assay3 %>% dplyr::select(Ps.genotype, Invader, Inv.strain, Ps.strain, Plate, Invasion.score) %>% arrange(Ps.genotype, Invader, Inv.strain, Ps.strain, Plate)
assay3 <- assay3 %>% filter(!is.na(Invasion.score))
assay3$Ps.genotype <- as.factor(assay3$Ps.genotype)
assay3$Ps.genotype <- fct_relevel(assay3$Ps.genotype, "Control", "Ps1", "Ps2")
assay3$Inv.strain <- as_factor(as.character(assay3$Inv.strain))
assay3$Inv.strain_shape <- if_else(assay3$Inv.strain == "18", "2", "16")
assay3$Invader <- as_factor(assay3$Invader) %>% fct_relevel("Soft_bug", "Streptomyces")
assay3$Ps.strain <- as_factor(assay3$Ps.strain)
assay3$Plate <- as_factor(as.character(assay3$Plate))
tbl_df(assay3) # 975 rows and 7 cols
# Chunk 6
assay4 <- assay3 %>% dplyr::filter(Ps.strain != "Control")
assay4$Ps.strain <- droplevels(assay4$Ps.strain)
xtabs(~ Inv.strain + Ps.strain + Plate, assay4)
rm(assay4)
assay5 <- assay3 %>% dplyr::filter(Ps.strain == "Control")
assay5$Ps.strain <- droplevels(assay5$Ps.strain)
xtabs(~ Inv.strain + Ps.strain + Plate, assay5)
rm(assay5)
# Chunk 7
assay1 %>% count(Invader, Ps.genotype)
assay2 %>% count(Invader, Ps.genotype)
assay3 %>% count(Invader, Ps.genotype, Plate)
# Chunk 1
# rm(list=ls())
library(tidyverse)
library(readxl)
library(knitr)
library(RColorBrewer)
library(ggthemes)
library(lattice)
library(lme4)
library(sjPlot)
sessionInfo()
# Chunk 2
datafile <- "Figure_1A_Growth_rate_analyses_DataSheet_20180302.xlsx"
sheet_strepto <- "data_table_Strep"
sheet_softbugs <- "data_table_Sb"
# Chunk 3: Streptomyces dataset
assay1 <- read_excel(datafile, sheet_strepto, na = "NA")
tbl_df(assay1) # should have 492 rows and 7 cols
assay1 <- assay1 %>% dplyr::select(-Input.order)
assay1 # should have 492 rows and 6 cols
# Chunk 4: Softbugs dataset
assay2 <- read_excel(datafile, sheet_softbugs, na = "NA")
tbl_df(assay2) # should have 483 rows and 10 cols
assay2 <- assay2 %>% dplyr::select(-Input.order)
assay2$Inv.strain <- assay2$Inv.strain + 10 # to differentiate numbering from Strepto samples
assay2 <- assay2 %>% mutate(Plate = ifelse(Plate == 4, 1, ifelse(Plate == 5, 2, ifelse(Plate == 6, 3, NA))))
assay2 # should have 483 rows and 6 cols
# Chunk 5: assay3
assay3 <- bind_rows(assay1, assay2)
assay3 <- assay3 %>% dplyr::select(Ps.genotype, Invader, Inv.strain, Ps.strain, Plate, Invasion.score) %>% arrange(Ps.genotype, Invader, Inv.strain, Ps.strain, Plate)
assay3 <- assay3 %>% filter(!is.na(Invasion.score))
assay3$Ps.genotype <- as.factor(assay3$Ps.genotype)
assay3$Ps.genotype <- fct_relevel(assay3$Ps.genotype, "Control", "Ps1", "Ps2")
assay3$Inv.strain <- as_factor(as.character(assay3$Inv.strain))
assay3$Inv.strain_shape <- if_else(assay3$Inv.strain == "18", "2", "16")
assay3$Invader <- as_factor(assay3$Invader) %>% fct_relevel("Soft_bug", "Streptomyces")
assay3$Ps.strain <- as_factor(assay3$Ps.strain)
assay3$Plate <- as_factor(as.character(assay3$Plate))
tbl_df(assay3) # 975 rows and 7 cols
# Chunk 6
assay4 <- assay3 %>% dplyr::filter(Ps.strain != "Control")
assay4$Ps.strain <- droplevels(assay4$Ps.strain)
xtabs(~ Inv.strain + Ps.strain + Plate, assay4)
rm(assay4)
assay5 <- assay3 %>% dplyr::filter(Ps.strain == "Control")
assay5$Ps.strain <- droplevels(assay5$Ps.strain)
xtabs(~ Inv.strain + Ps.strain + Plate, assay5)
rm(assay5)
# Chunk 7
assay1 %>% count(Invader, Ps.genotype)
assay2 %>% count(Invader, Ps.genotype)
assay3 %>% count(Invader, Ps.genotype, Plate)
colorvec <- brewer.pal(3,"RdBu")
colorvec <- c(colorvec[3], colorvec[1], colorvec[2])
p <- ggplot(assay3, aes(x = Ps.genotype:Invader, y = Invasion.score))
# truncated y-axis version for publication
(q <- p + ylim(0, 2.5)
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay3$Invader))
+ geom_jitter(width = 0.05, cex = .8, aes(shape = assay3$Inv.strain_shape))
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Growth score:  Mean colony area " ~ (cm^{2})))
# + scale_fill_brewer(type = "qual", palette = "Set3") # alternative color set
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
# non-truncated y-axis version. Analysis uses the whole dataset
q + ylim(0, 4)
# truncated y-axis version for publication
(q <- p + ylim(0, 2.5)
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay3$Invader))
+ geom_jitter(width = 0.05, cex = 1, aes(shape = assay3$Inv.strain_shape))
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Growth score:  Mean colony area " ~ (cm^{2})))
# + scale_fill_brewer(type = "qual", palette = "Set3") # alternative color set
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
# truncated y-axis version for publication
(q <- p + ylim(0, 2.5)
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay3$Invader))
+ geom_jitter(width = 0.05, cex = 1.1, aes(shape = assay3$Inv.strain_shape))
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Growth score:  Mean colony area " ~ (cm^{2})))
# + scale_fill_brewer(type = "qual", palette = "Set3") # alternative color set
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
# truncated y-axis version for publication
(q <- p + ylim(0, 2.5)
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay3$Invader))
+ geom_jitter(width = 0.05, cex = 0.8, aes(shape = assay3$Inv.strain_shape))
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Growth score:  Mean colony area " ~ (cm^{2})))
# + scale_fill_brewer(type = "qual", palette = "Set3") # alternative color set
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
# truncated y-axis version for publication
(q <- p + ylim(0, 2.5)
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay3$Invader))
+ geom_jitter(width = 0.05, cex = 1.5, aes(shape = assay3$Inv.strain_shape))
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Growth score:  Mean colony area " ~ (cm^{2})))
# + scale_fill_brewer(type = "qual", palette = "Set3") # alternative color set
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
(assay4.1 <- assay3 %>% group_by(Ps.genotype, Invader) %>% summarise(median.Invasion.score=round(median(Invasion.score), 2)))
assay4.2 <- assay3 %>% group_by(Ps.genotype, Invader, Inv.strain) %>% summarise(median.Invasion.score=round(median(Invasion.score), 2))
assay4.2 <- assay4.2 %>% arrange(Ps.genotype, Invader, median.Invasion.score)
assay4.3 <- assay3 %>% group_by(Ps.genotype, Ps.strain, Invader, Inv.strain) %>% summarise(median.Invasion.score=round(median(Invasion.score), 2))
# write.table(assay4.1, file = "assay4.1.tsv", quote = FALSE, sep = "\t") # use this to choose summary pairs for the competition experiment
# write.table(assay4.2, file = "assay4.2.tsv", quote = FALSE, sep = "\t") # use this to choose summary pairs for the competition experiment
# write.table(assay4.3, file = "assay4.3.tsv", quote = FALSE, sep = "\t") # use this to choose summary pairs for the competition experiment
rm(assay4.1, assay4.2, assay4.3)
# Chunk 1
# rm(list=ls())
library(tidyverse)
library(readxl)
library(knitr)
library(RColorBrewer)
library(ggthemes)
library(lattice)
library(lme4)
library(sjPlot)
library(envDocument)
env_doc("table", git = FALSE)
# Chunk 2
datafile <- "Figure_1B_Growth_rate_analyses_DataSheet_20180303.xlsx"
sheet_strepto <- "Streptomyces"
sheet_softbugs <- "softbugs"
# Chunk 3
assay1 <- read_excel(datafile, sheet_strepto, na = "NA")
tbl_df(assay1) # should have 540 rows and 10 columns
assay1 <- assay1 %>% select(-Input.order, -Notes, -Standardised.score, -Spore.production) # should have 540 rows and 6 columns
# Chunk 4
assay2 <- read_excel(datafile, sheet_softbugs, na = "NA")
tbl_df(assay2) # should have 600 rows and 9 cols
assay2 <- assay2 %>% select(-Input.order, -Standardised.score, -Notes) # should have 600 rows and 6 columns
# change plate numbering for consistency
assay2 <- assay2 %>% mutate(Plate = ifelse(Plate == 4, 1, ifelse(Plate == 5, 2, ifelse(Plate == 6, 3, NA))))
# Chunk 5: assay3
assay3 <- bind_rows(assay1, assay2)
assay3 <- assay3 %>% dplyr::select(Ps.genotype, Invader, Inv.strain, Ps.strain, Plate, Invasion.score) %>% arrange(Ps.genotype, Invader, Inv.strain, Ps.strain, Plate)
assay3 <- assay3 %>% filter(!is.na(Invasion.score))
assay3$Ps.genotype <- as.factor(assay3$Ps.genotype)
assay3$Invader <- as.factor(assay3$Invader)
assay3$Inv.strain <- as.factor(assay3$Inv.strain)
assay3$Ps.strain <- as.factor(assay3$Ps.strain)
assay3$Plate <- as.factor(assay3$Plate)
tbl_df(assay3) # 1070 rows and 6 cols
# Chunk 6
assay4 <- assay3 %>% dplyr::filter(Ps.strain != "Control")
assay4$Ps.strain <- droplevels(assay4$Ps.strain)
xtabs(~ Inv.strain + Ps.strain + Plate, assay4)
rm(assay4)
assay5 <- assay3 %>% dplyr::filter(Ps.strain == "Control")
assay5$Ps.strain <- droplevels(assay5$Ps.strain)
xtabs(~ Inv.strain + Ps.strain + Plate, assay5)
rm(assay5)
# Chunk 7
assay1 %>% count(Invader, Ps.genotype)
assay2 %>% count(Invader, Ps.genotype)
assay3 %>% count(Invader, Ps.genotype)
colorvec <- brewer.pal(3,"RdBu")
colorvec <- c(colorvec[3], colorvec[1], colorvec[2])
p <- ggplot(assay3, aes(x = Ps.genotype:Invader, y = Invasion.score))
(q <- p + ylim(0, 2.5) # to have same y-range as Figure 1A
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay3$Invader))
+ geom_jitter(width = 0.05, cex = .5)
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Growth score:  Mean colony area " ~ (cm^{2})))
# + scale_fill_brewer(type = "qual", palette = "Set3") # alternative color set
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
(q <- p + ylim(0, 2.5) # to have same y-range as Figure 1A
+ geom_boxplot(size = .5, outlier.shape = NA, width = 0.3, aes(fill = assay3$Invader))
+ geom_jitter(width = 0.05, cex = 1.5)
+ scale_shape_manual(values = c(16, 2))
+ labs(y = expression("Growth score:  Mean colony area " ~ (cm^{2})))
# + scale_fill_brewer(type = "qual", palette = "Set3") # alternative color set
+ scale_fill_manual(values = colorvec)
+ theme(axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
legend.position='none',
panel.background = element_rect(fill = "white"),
panel.grid.major.y = element_line(colour = "grey", size = 0.5),
panel.grid.minor.y = element_line(colour = "grey", size = 0.1),
panel.border = element_rect(colour = "black", fill = NA)
)
)
